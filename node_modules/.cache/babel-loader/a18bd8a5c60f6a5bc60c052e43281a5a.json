{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: () => getAllConfigs\n});\n\nconst _defaultConfigStubJs = /*#__PURE__*/_interopRequireDefault(require(\"../../stubs/defaultConfig.stub.js\"));\n\nconst _featureFlags = require(\"../featureFlags\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getAllConfigs(config) {\n  var ref;\n  const configs = ((ref = config === null || config === void 0 ? void 0 : config.presets) !== null && ref !== void 0 ? ref : [_defaultConfigStubJs.default]).slice().reverse().flatMap(preset => getAllConfigs(preset instanceof Function ? preset() : preset));\n  const features = {\n    // Add experimental configs here...\n    respectDefaultRingColorOpacity: {\n      theme: {\n        ringColor: {\n          DEFAULT: \"#3b82f67f\"\n        }\n      }\n    }\n  };\n  const experimentals = Object.keys(features).filter(feature => (0, _featureFlags.flagEnabled)(config, feature)).map(feature => features[feature]);\n  return [config, ...experimentals, ...configs];\n}","map":{"version":3,"sources":["/Users/mymac/Desktop/material-ui-portfolio/node_modules/tailwindcss/lib/util/getAllConfigs.js"],"names":["Object","defineProperty","exports","value","enumerable","get","getAllConfigs","_defaultConfigStubJs","_interopRequireDefault","require","_featureFlags","obj","__esModule","default","config","ref","configs","presets","slice","reverse","flatMap","preset","Function","features","respectDefaultRingColorOpacity","theme","ringColor","DEFAULT","experimentals","keys","filter","feature","flagEnabled","map"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;AAGAH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,SAA/B,EAA0C;AACtCE,EAAAA,UAAU,EAAE,IAD0B;AAEtCC,EAAAA,GAAG,EAAE,MAAIC;AAF6B,CAA1C;;AAIA,MAAMC,oBAAoB,GAAG,aAAcC,sBAAsB,CAACC,OAAO,CAAC,mCAAD,CAAR,CAAjE;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AACA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjCE,IAAAA,OAAO,EAAEF;AADwB,GAArC;AAGH;;AACD,SAASL,aAAT,CAAuBQ,MAAvB,EAA+B;AAC3B,MAAIC,GAAJ;AACA,QAAMC,OAAO,GAAG,CAAC,CAACD,GAAG,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACG,OAA9D,MAA2E,IAA3E,IAAmFF,GAAG,KAAK,KAAK,CAAhG,GAAoGA,GAApG,GAA0G,CACvHR,oBAAoB,CAACM,OADkG,CAA3G,EAEbK,KAFa,GAELC,OAFK,GAEKC,OAFL,CAEcC,MAAD,IAAUf,aAAa,CAACe,MAAM,YAAYC,QAAlB,GAA6BD,MAAM,EAAnC,GAAwCA,MAAzC,CAFpC,CAAhB;AAGA,QAAME,QAAQ,GAAG;AACb;AACAC,IAAAA,8BAA8B,EAAE;AAC5BC,MAAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE;AACPC,UAAAA,OAAO,EAAE;AADF;AADR;AADqB;AAFnB,GAAjB;AAUA,QAAMC,aAAa,GAAG5B,MAAM,CAAC6B,IAAP,CAAYN,QAAZ,EAAsBO,MAAtB,CAA8BC,OAAD,IAAW,CAAC,GAAGrB,aAAa,CAACsB,WAAlB,EAA+BlB,MAA/B,EAAuCiB,OAAvC,CAAxC,EAAyFE,GAAzF,CAA8FF,OAAD,IAAWR,QAAQ,CAACQ,OAAD,CAAhH,CAAtB;AACA,SAAO,CACHjB,MADG,EAEH,GAAGc,aAFA,EAGH,GAAGZ,OAHA,CAAP;AAKH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>getAllConfigs\n});\nconst _defaultConfigStubJs = /*#__PURE__*/ _interopRequireDefault(require(\"../../stubs/defaultConfig.stub.js\"));\nconst _featureFlags = require(\"../featureFlags\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction getAllConfigs(config) {\n    var ref;\n    const configs = ((ref = config === null || config === void 0 ? void 0 : config.presets) !== null && ref !== void 0 ? ref : [\n        _defaultConfigStubJs.default\n    ]).slice().reverse().flatMap((preset)=>getAllConfigs(preset instanceof Function ? preset() : preset));\n    const features = {\n        // Add experimental configs here...\n        respectDefaultRingColorOpacity: {\n            theme: {\n                ringColor: {\n                    DEFAULT: \"#3b82f67f\"\n                }\n            }\n        }\n    };\n    const experimentals = Object.keys(features).filter((feature)=>(0, _featureFlags.flagEnabled)(config, feature)).map((feature)=>features[feature]);\n    return [\n        config,\n        ...experimentals,\n        ...configs\n    ];\n}\n"]},"metadata":{},"sourceType":"script"}