{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/Shindano-Portfolio/src/components/Projects.js\";\nimport React from 'react';\nimport chatApp from '../images/mobile.gif';\n\nconst Projects = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid h-screen mx-1 place-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex justify-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex flex-col md:flex-row md:max-w-xl rounded-lg bg-white shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \" w-max-sm mx-1  h-full md:h-auto object-cover md:w-48 rounded-t-lg md:rounded-none md:rounded-l-lg\",\n    src: chatApp,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"p-2 flex flex-col justify-start w-max-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    class: \"text-gray-900 text-xl text-center font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 36\n    }\n  }, \"Real-Time Chat App\"), /*#__PURE__*/React.createElement(\"li\", {\n    class: \"text-gray-700 text-base mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 36\n    }\n  }, \"Created an application that enabled users to chat in real time. The goal of the project was to let users chat in privacy. Implemented user sign- up, sign In; room Creation, Update, and Deletion (CRUD). Also, users were able to delete messages. Used SQL, relational database to store users\\u2019data. The following technologies were used: Django and SQL for the back end and templates, JavaScript, Vanilla CSS, Materialize, Bootstrap, and TailWindCSS were utilized for the front end. Did project documentation in README.\"), /*#__PURE__*/React.createElement(\"h6\", {\n    class: \"text-gray-900 text-xl text-center font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 36\n    }\n  }, \"Technologies\"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"text-gray-600 italic text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 36\n    }\n  }, \"Django | SQL | Templates | JavaScript | CSS | Materialize | Bootstrap | TailWindCSS\")))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex flex-col md:flex-row md:max-w-xl rounded-lg bg-white shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \" w-full mx-1  h-full md:h-auto object-cover md:w-48 rounded-t-lg md:rounded-none md:rounded-l-lg\",\n    src: chatApp,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"p-2 flex flex-col justify-start w-max-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    class: \"text-gray-900 text-xl text-center font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 36\n    }\n  }, \"Real-Time Chat App\"), /*#__PURE__*/React.createElement(\"li\", {\n    class: \"text-gray-700 text-base mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 36\n    }\n  }, \"Created an application that enabled users to chat in real time. The goal of the project was to let users chat in privacy. Implemented user sign- up, sign In; room Creation, Update, and Deletion (CRUD). Also, users were able to delete messages. Used SQL, relational database to store users\\u2019data. The following technologies were used: Django and SQL for the back end and templates, JavaScript, Vanilla CSS, Materialize, Bootstrap, and TailWindCSS were utilized for the front end. Did project documentation in README.\"), /*#__PURE__*/React.createElement(\"h6\", {\n    class: \"text-gray-900 text-xl text-center font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 36\n    }\n  }, \"Technologies\"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"text-gray-600 italic text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 36\n    }\n  }, \"Django | SQL | Templates | JavaScript | CSS | Materialize | Bootstrap | TailWindCSS\")))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex flex-col md:flex-row md:max-w-xl rounded-lg bg-white shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \" w-full mx-1  h-full md:h-auto object-cover md:w-48 rounded-t-lg md:rounded-none md:rounded-l-lg\",\n    src: chatApp,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"p-2 flex flex-col justify-start w-max-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    class: \"text-gray-900 text-xl text-center font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 36\n    }\n  }, \"Real-Time Chat App\"), /*#__PURE__*/React.createElement(\"li\", {\n    class: \"text-gray-700 text-base mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 36\n    }\n  }, \"Created an application that enabled users to chat in real time. The goal of the project was to let users chat in privacy. Implemented user sign- up, sign In; room Creation, Update, and Deletion (CRUD). Also, users were able to delete messages. Used SQL, relational database to store users\\u2019data. The following technologies were used: Django and SQL for the back end and templates, JavaScript, Vanilla CSS, Materialize, Bootstrap, and TailWindCSS were utilized for the front end. Did project documentation in README.\"), /*#__PURE__*/React.createElement(\"h6\", {\n    class: \"text-gray-900 text-xl text-center font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 36\n    }\n  }, \"Technologies\"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"text-gray-600 italic text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 36\n    }\n  }, \"Django | SQL | Templates | JavaScript | CSS | Materialize | Bootstrap | TailWindCSS\")))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex flex-col md:flex-row md:max-w-xl rounded-lg bg-white shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \" w-full mx-1  h-full md:h-auto object-cover md:w-48 rounded-t-lg md:rounded-none md:rounded-l-lg\",\n    src: chatApp,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"p-2 flex flex-col justify-start w-max-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    class: \"text-gray-900 text-xl text-center font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 36\n    }\n  }, \"Real-Time Chat App\"), /*#__PURE__*/React.createElement(\"li\", {\n    class: \"text-gray-700 text-base mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 36\n    }\n  }, \"Created an application that enabled users to chat in real time. The goal of the project was to let users chat in privacy. Implemented user sign- up, sign In; room Creation, Update, and Deletion (CRUD). Also, users were able to delete messages. Used SQL, relational database to store users\\u2019data. The following technologies were used: Django and SQL for the back end and templates, JavaScript, Vanilla CSS, Materialize, Bootstrap, and TailWindCSS were utilized for the front end. Did project documentation in README.\"), /*#__PURE__*/React.createElement(\"h6\", {\n    class: \"text-gray-900 text-xl text-center font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 36\n    }\n  }, \"Technologies\"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"text-gray-600 italic text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 36\n    }\n  }, \"Django | SQL | Templates | JavaScript | CSS | Materialize | Bootstrap | TailWindCSS\"))))));\n};\n\nexport default Projects;","map":{"version":3,"sources":["/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/Shindano-Portfolio/src/components/Projects.js"],"names":["React","chatApp","Projects"],"mappings":"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","sourcesContent":["import React from 'react';\nimport chatApp from '../images/mobile.gif'\n\nconst Projects = () => {\n     return (\n          <div className=\"\">\n               <div className=\"grid h-screen mx-1 place-items-center\">\n                    <div class=\"flex justify-center mb-2\">\n                         <div class=\"flex flex-col md:flex-row md:max-w-xl rounded-lg bg-white shadow-lg\">\n                              <img class=\" w-max-sm mx-1  h-full md:h-auto object-cover md:w-48 rounded-t-lg md:rounded-none md:rounded-l-lg\"\n                                   src={chatApp}\n                                   alt=\"\"/>\n                              <div class=\"p-2 flex flex-col justify-start w-max-sm\">\n                                   <h5 class=\"text-gray-900 text-xl text-center font-medium mb-2\">Real-Time Chat App</h5>\n\n                                   <li class=\"text-gray-700 text-base mb-4\">\n                                        Created an application that enabled users to chat in real time. The goal of the project was to let users chat in privacy. Implemented user sign- up, sign In; room Creation, Update, and Deletion (CRUD). Also, users were able to delete messages. Used SQL, relational database to store users’data. The following technologies were used: Django and SQL for the back end and templates, JavaScript, Vanilla CSS, Materialize, Bootstrap, and TailWindCSS were utilized for the front end. Did project documentation in README.\n                                   </li>\n                                   <h6 class=\"text-gray-900 text-xl text-center font-medium mb-2\">Technologies</h6>\n                                   <p class=\"text-gray-600 italic text-center\">Django | SQL | Templates | JavaScript | CSS | Materialize | Bootstrap | TailWindCSS</p>\n                              </div>\n                         </div>\n                    </div>\n\n                    <div class=\"flex justify-center\">\n                         <div class=\"flex flex-col md:flex-row md:max-w-xl rounded-lg bg-white shadow-lg\">\n                              <img class=\" w-full mx-1  h-full md:h-auto object-cover md:w-48 rounded-t-lg md:rounded-none md:rounded-l-lg\"\n                                   src={chatApp}\n                                   alt=\"\"/>\n                              <div class=\"p-2 flex flex-col justify-start w-max-sm\">\n                                   <h5 class=\"text-gray-900 text-xl text-center font-medium mb-2\">Real-Time Chat App</h5>\n\n                                   <li class=\"text-gray-700 text-base mb-4\">\n                                        Created an application that enabled users to chat in real time. The goal of the project was to let users chat in privacy. Implemented user sign- up, sign In; room Creation, Update, and Deletion (CRUD). Also, users were able to delete messages. Used SQL, relational database to store users’data. The following technologies were used: Django and SQL for the back end and templates, JavaScript, Vanilla CSS, Materialize, Bootstrap, and TailWindCSS were utilized for the front end. Did project documentation in README.\n                                   </li>\n                                   <h6 class=\"text-gray-900 text-xl text-center font-medium mb-2\">Technologies</h6>\n                                   <p class=\"text-gray-600 italic text-center\">Django | SQL | Templates | JavaScript | CSS | Materialize | Bootstrap | TailWindCSS</p>\n                              </div>\n                         </div>\n                    </div>\n\n                    <div class=\"flex justify-center\">\n                         <div class=\"flex flex-col md:flex-row md:max-w-xl rounded-lg bg-white shadow-lg\">\n                              <img class=\" w-full mx-1  h-full md:h-auto object-cover md:w-48 rounded-t-lg md:rounded-none md:rounded-l-lg\"\n                                   src={chatApp}\n                                   alt=\"\"/>\n                              <div class=\"p-2 flex flex-col justify-start w-max-sm\">\n                                   <h5 class=\"text-gray-900 text-xl text-center font-medium mb-2\">Real-Time Chat App</h5>\n\n                                   <li class=\"text-gray-700 text-base mb-4\">\n                                        Created an application that enabled users to chat in real time. The goal of the project was to let users chat in privacy. Implemented user sign- up, sign In; room Creation, Update, and Deletion (CRUD). Also, users were able to delete messages. Used SQL, relational database to store users’data. The following technologies were used: Django and SQL for the back end and templates, JavaScript, Vanilla CSS, Materialize, Bootstrap, and TailWindCSS were utilized for the front end. Did project documentation in README.\n                                   </li>\n                                   <h6 class=\"text-gray-900 text-xl text-center font-medium mb-2\">Technologies</h6>\n                                   <p class=\"text-gray-600 italic text-center\">Django | SQL | Templates | JavaScript | CSS | Materialize | Bootstrap | TailWindCSS</p>\n                              </div>\n                         </div>\n                    </div>\n\n                    <div class=\"flex justify-center\">\n                         <div class=\"flex flex-col md:flex-row md:max-w-xl rounded-lg bg-white shadow-lg\">\n                              <img class=\" w-full mx-1  h-full md:h-auto object-cover md:w-48 rounded-t-lg md:rounded-none md:rounded-l-lg\"\n                                   src={chatApp}\n                                   alt=\"\"/>\n                              <div class=\"p-2 flex flex-col justify-start w-max-sm\">\n                                   <h5 class=\"text-gray-900 text-xl text-center font-medium mb-2\">Real-Time Chat App</h5>\n\n                                   <li class=\"text-gray-700 text-base mb-4\">\n                                        Created an application that enabled users to chat in real time. The goal of the project was to let users chat in privacy. Implemented user sign- up, sign In; room Creation, Update, and Deletion (CRUD). Also, users were able to delete messages. Used SQL, relational database to store users’data. The following technologies were used: Django and SQL for the back end and templates, JavaScript, Vanilla CSS, Materialize, Bootstrap, and TailWindCSS were utilized for the front end. Did project documentation in README.\n                                   </li>\n                                   <h6 class=\"text-gray-900 text-xl text-center font-medium mb-2\">Technologies</h6>\n                                   <p class=\"text-gray-600 italic text-center\">Django | SQL | Templates | JavaScript | CSS | Materialize | Bootstrap | TailWindCSS</p>\n                              </div>\n                         </div>\n                    </div>\n               </div>\n\n          </div>\n     );\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}