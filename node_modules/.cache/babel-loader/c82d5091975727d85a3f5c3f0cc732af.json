{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: () => resolveConfig\n});\n\nconst _negateValue = /*#__PURE__*/_interopRequireDefault(require(\"./negateValue\"));\n\nconst _corePluginList = /*#__PURE__*/_interopRequireDefault(require(\"../corePluginList\"));\n\nconst _configurePlugins = /*#__PURE__*/_interopRequireDefault(require(\"./configurePlugins\"));\n\nconst _defaultConfigStub = /*#__PURE__*/_interopRequireDefault(require(\"../../stubs/defaultConfig.stub\"));\n\nconst _colors = /*#__PURE__*/_interopRequireDefault(require(\"../public/colors\"));\n\nconst _defaults = require(\"./defaults\");\n\nconst _toPath = require(\"./toPath\");\n\nconst _normalizeConfig = require(\"./normalizeConfig\");\n\nconst _isPlainObject = /*#__PURE__*/_interopRequireDefault(require(\"./isPlainObject\"));\n\nconst _cloneDeep = require(\"./cloneDeep\");\n\nconst _pluginUtils = require(\"./pluginUtils\");\n\nconst _withAlphaVariable = require(\"./withAlphaVariable\");\n\nconst _toColorValue = /*#__PURE__*/_interopRequireDefault(require(\"./toColorValue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction isFunction(input) {\n  return typeof input === \"function\";\n}\n\nfunction isObject(input) {\n  return typeof input === \"object\" && input !== null;\n}\n\nfunction mergeWith(target, ...sources) {\n  let customizer = sources.pop();\n\n  for (let source of sources) {\n    for (let k in source) {\n      let merged = customizer(target[k], source[k]);\n\n      if (merged === undefined) {\n        if (isObject(target[k]) && isObject(source[k])) {\n          target[k] = mergeWith(target[k], source[k], customizer);\n        } else {\n          target[k] = source[k];\n        }\n      } else {\n        target[k] = merged;\n      }\n    }\n  }\n\n  return target;\n}\n\nconst configUtils = {\n  colors: _colors.default,\n\n  negative(scale) {\n    // TODO: Log that this function isn't really needed anymore?\n    return Object.keys(scale).filter(key => scale[key] !== \"0\").reduce((negativeScale, key) => {\n      let negativeValue = (0, _negateValue.default)(scale[key]);\n\n      if (negativeValue !== undefined) {\n        negativeScale[`-${key}`] = negativeValue;\n      }\n\n      return negativeScale;\n    }, {});\n  },\n\n  breakpoints(screens) {\n    return Object.keys(screens).filter(key => typeof screens[key] === \"string\").reduce((breakpoints, key) => ({ ...breakpoints,\n      [`screen-${key}`]: screens[key]\n    }), {});\n  }\n\n};\n\nfunction value(valueToResolve, ...args) {\n  return isFunction(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\n\nfunction collectExtends(items) {\n  return items.reduce((merged, {\n    extend\n  }) => {\n    return mergeWith(merged, extend, (mergedValue, extendValue) => {\n      if (mergedValue === undefined) {\n        return [extendValue];\n      }\n\n      if (Array.isArray(mergedValue)) {\n        return [extendValue, ...mergedValue];\n      }\n\n      return [extendValue, mergedValue];\n    });\n  }, {});\n}\n\nfunction mergeThemes(themes) {\n  return { ...themes.reduce((merged, theme) => (0, _defaults.defaults)(merged, theme), {}),\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: collectExtends(themes)\n  };\n}\n\nfunction mergeExtensionCustomizer(merged, value) {\n  // When we have an array of objects, we do want to merge it\n  if (Array.isArray(merged) && isObject(merged[0])) {\n    return merged.concat(value);\n  } // When the incoming value is an array, and the existing config is an object, prepend the existing object\n\n\n  if (Array.isArray(value) && isObject(value[0]) && isObject(merged)) {\n    return [merged, ...value];\n  } // Override arrays (for example for font-families, box-shadows, ...)\n\n\n  if (Array.isArray(value)) {\n    return value;\n  } // Execute default behaviour\n\n\n  return undefined;\n}\n\nfunction mergeExtensions({\n  extend,\n  ...theme\n}) {\n  return mergeWith(theme, extend, (themeValue, extensions) => {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!isFunction(themeValue) && !extensions.some(isFunction)) {\n      return mergeWith({}, themeValue, ...extensions, mergeExtensionCustomizer);\n    }\n\n    return (resolveThemePath, utils) => mergeWith({}, ...[themeValue, ...extensions].map(e => value(e, resolveThemePath, utils)), mergeExtensionCustomizer);\n  });\n}\n/**\n *\n * @param {string} key\n * @return {Iterable<string[] & {alpha: string | undefined}>}\n */\n\n\nfunction* toPaths(key) {\n  let path = (0, _toPath.toPath)(key);\n\n  if (path.length === 0) {\n    return;\n  }\n\n  yield path;\n\n  if (Array.isArray(key)) {\n    return;\n  }\n\n  let pattern = /^(.*?)\\s*\\/\\s*([^/]+)$/;\n  let matches = key.match(pattern);\n\n  if (matches !== null) {\n    let [, prefix, alpha] = matches;\n    let newPath = (0, _toPath.toPath)(prefix);\n    newPath.alpha = alpha;\n    yield newPath;\n  }\n}\n\nfunction resolveFunctionKeys(object) {\n  // theme('colors.red.500 / 0.5') -> ['colors', 'red', '500 / 0', '5]\n  const resolvePath = (key, defaultValue) => {\n    for (const path of toPaths(key)) {\n      let index = 0;\n      let val = object;\n\n      while (val !== undefined && val !== null && index < path.length) {\n        val = val[path[index++]];\n        let shouldResolveAsFn = isFunction(val) && (path.alpha === undefined || index <= path.length - 1);\n        val = shouldResolveAsFn ? val(resolvePath, configUtils) : val;\n      }\n\n      if (val !== undefined) {\n        if (path.alpha !== undefined) {\n          let normalized = (0, _pluginUtils.parseColorFormat)(val);\n          return (0, _withAlphaVariable.withAlphaValue)(normalized, path.alpha, (0, _toColorValue.default)(normalized));\n        }\n\n        if ((0, _isPlainObject.default)(val)) {\n          return (0, _cloneDeep.cloneDeep)(val);\n        }\n\n        return val;\n      }\n    }\n\n    return defaultValue;\n  };\n\n  Object.assign(resolvePath, {\n    theme: resolvePath,\n    ...configUtils\n  });\n  return Object.keys(object).reduce((resolved, key) => {\n    resolved[key] = isFunction(object[key]) ? object[key](resolvePath, configUtils) : object[key];\n    return resolved;\n  }, {});\n}\n\nfunction extractPluginConfigs(configs) {\n  let allConfigs = [];\n  configs.forEach(config => {\n    allConfigs = [...allConfigs, config];\n    var ref;\n    const plugins = (ref = config === null || config === void 0 ? void 0 : config.plugins) !== null && ref !== void 0 ? ref : [];\n\n    if (plugins.length === 0) {\n      return;\n    }\n\n    plugins.forEach(plugin => {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin();\n      }\n\n      var ref;\n      allConfigs = [...allConfigs, ...extractPluginConfigs([(ref = plugin === null || plugin === void 0 ? void 0 : plugin.config) !== null && ref !== void 0 ? ref : {}])];\n    });\n  });\n  return allConfigs;\n}\n\nfunction resolveCorePlugins(corePluginConfigs) {\n  const result = [...corePluginConfigs].reduceRight((resolved, corePluginConfig) => {\n    if (isFunction(corePluginConfig)) {\n      return corePluginConfig({\n        corePlugins: resolved\n      });\n    }\n\n    return (0, _configurePlugins.default)(corePluginConfig, resolved);\n  }, _corePluginList.default);\n  return result;\n}\n\nfunction resolvePluginLists(pluginLists) {\n  const result = [...pluginLists].reduceRight((resolved, pluginList) => {\n    return [...resolved, ...pluginList];\n  }, []);\n  return result;\n}\n\nfunction resolveConfig(configs) {\n  let allConfigs = [...extractPluginConfigs(configs), {\n    prefix: \"\",\n    important: false,\n    separator: \":\",\n    variantOrder: _defaultConfigStub.default.variantOrder\n  }];\n  var ref, ref1;\n  return (0, _normalizeConfig.normalizeConfig)((0, _defaults.defaults)({\n    theme: resolveFunctionKeys(mergeExtensions(mergeThemes(allConfigs.map(t => {\n      return (ref = t === null || t === void 0 ? void 0 : t.theme) !== null && ref !== void 0 ? ref : {};\n    })))),\n    corePlugins: resolveCorePlugins(allConfigs.map(c => c.corePlugins)),\n    plugins: resolvePluginLists(configs.map(c => {\n      return (ref1 = c === null || c === void 0 ? void 0 : c.plugins) !== null && ref1 !== void 0 ? ref1 : [];\n    }))\n  }, ...allConfigs));\n}","map":{"version":3,"sources":["/Users/mymac/Desktop/material-ui-portfolio/node_modules/tailwindcss/lib/util/resolveConfig.js"],"names":["Object","defineProperty","exports","value","enumerable","get","resolveConfig","_negateValue","_interopRequireDefault","require","_corePluginList","_configurePlugins","_defaultConfigStub","_colors","_defaults","_toPath","_normalizeConfig","_isPlainObject","_cloneDeep","_pluginUtils","_withAlphaVariable","_toColorValue","obj","__esModule","default","isFunction","input","isObject","mergeWith","target","sources","customizer","pop","source","k","merged","undefined","configUtils","colors","negative","scale","keys","filter","key","reduce","negativeScale","negativeValue","breakpoints","screens","valueToResolve","args","collectExtends","items","extend","mergedValue","extendValue","Array","isArray","mergeThemes","themes","theme","defaults","mergeExtensionCustomizer","concat","mergeExtensions","themeValue","extensions","some","resolveThemePath","utils","map","e","toPaths","path","toPath","length","pattern","matches","match","prefix","alpha","newPath","resolveFunctionKeys","object","resolvePath","defaultValue","index","val","shouldResolveAsFn","normalized","parseColorFormat","withAlphaValue","cloneDeep","assign","resolved","extractPluginConfigs","configs","allConfigs","forEach","config","ref","plugins","plugin","__isOptionsFunction","resolveCorePlugins","corePluginConfigs","result","reduceRight","corePluginConfig","corePlugins","resolvePluginLists","pluginLists","pluginList","important","separator","variantOrder","ref1","normalizeConfig","t","c"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>resolveConfig\n});\nconst _negateValue = /*#__PURE__*/ _interopRequireDefault(require(\"./negateValue\"));\nconst _corePluginList = /*#__PURE__*/ _interopRequireDefault(require(\"../corePluginList\"));\nconst _configurePlugins = /*#__PURE__*/ _interopRequireDefault(require(\"./configurePlugins\"));\nconst _defaultConfigStub = /*#__PURE__*/ _interopRequireDefault(require(\"../../stubs/defaultConfig.stub\"));\nconst _colors = /*#__PURE__*/ _interopRequireDefault(require(\"../public/colors\"));\nconst _defaults = require(\"./defaults\");\nconst _toPath = require(\"./toPath\");\nconst _normalizeConfig = require(\"./normalizeConfig\");\nconst _isPlainObject = /*#__PURE__*/ _interopRequireDefault(require(\"./isPlainObject\"));\nconst _cloneDeep = require(\"./cloneDeep\");\nconst _pluginUtils = require(\"./pluginUtils\");\nconst _withAlphaVariable = require(\"./withAlphaVariable\");\nconst _toColorValue = /*#__PURE__*/ _interopRequireDefault(require(\"./toColorValue\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isFunction(input) {\n    return typeof input === \"function\";\n}\nfunction isObject(input) {\n    return typeof input === \"object\" && input !== null;\n}\nfunction mergeWith(target, ...sources) {\n    let customizer = sources.pop();\n    for (let source of sources){\n        for(let k in source){\n            let merged = customizer(target[k], source[k]);\n            if (merged === undefined) {\n                if (isObject(target[k]) && isObject(source[k])) {\n                    target[k] = mergeWith(target[k], source[k], customizer);\n                } else {\n                    target[k] = source[k];\n                }\n            } else {\n                target[k] = merged;\n            }\n        }\n    }\n    return target;\n}\nconst configUtils = {\n    colors: _colors.default,\n    negative (scale) {\n        // TODO: Log that this function isn't really needed anymore?\n        return Object.keys(scale).filter((key)=>scale[key] !== \"0\").reduce((negativeScale, key)=>{\n            let negativeValue = (0, _negateValue.default)(scale[key]);\n            if (negativeValue !== undefined) {\n                negativeScale[`-${key}`] = negativeValue;\n            }\n            return negativeScale;\n        }, {});\n    },\n    breakpoints (screens) {\n        return Object.keys(screens).filter((key)=>typeof screens[key] === \"string\").reduce((breakpoints, key)=>({\n                ...breakpoints,\n                [`screen-${key}`]: screens[key]\n            }), {});\n    }\n};\nfunction value(valueToResolve, ...args) {\n    return isFunction(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\nfunction collectExtends(items) {\n    return items.reduce((merged, { extend  })=>{\n        return mergeWith(merged, extend, (mergedValue, extendValue)=>{\n            if (mergedValue === undefined) {\n                return [\n                    extendValue\n                ];\n            }\n            if (Array.isArray(mergedValue)) {\n                return [\n                    extendValue,\n                    ...mergedValue\n                ];\n            }\n            return [\n                extendValue,\n                mergedValue\n            ];\n        });\n    }, {});\n}\nfunction mergeThemes(themes) {\n    return {\n        ...themes.reduce((merged, theme)=>(0, _defaults.defaults)(merged, theme), {}),\n        // In order to resolve n config objects, we combine all of their `extend` properties\n        // into arrays instead of objects so they aren't overridden.\n        extend: collectExtends(themes)\n    };\n}\nfunction mergeExtensionCustomizer(merged, value) {\n    // When we have an array of objects, we do want to merge it\n    if (Array.isArray(merged) && isObject(merged[0])) {\n        return merged.concat(value);\n    }\n    // When the incoming value is an array, and the existing config is an object, prepend the existing object\n    if (Array.isArray(value) && isObject(value[0]) && isObject(merged)) {\n        return [\n            merged,\n            ...value\n        ];\n    }\n    // Override arrays (for example for font-families, box-shadows, ...)\n    if (Array.isArray(value)) {\n        return value;\n    }\n    // Execute default behaviour\n    return undefined;\n}\nfunction mergeExtensions({ extend , ...theme }) {\n    return mergeWith(theme, extend, (themeValue, extensions)=>{\n        // The `extend` property is an array, so we need to check if it contains any functions\n        if (!isFunction(themeValue) && !extensions.some(isFunction)) {\n            return mergeWith({}, themeValue, ...extensions, mergeExtensionCustomizer);\n        }\n        return (resolveThemePath, utils)=>mergeWith({}, ...[\n                themeValue,\n                ...extensions\n            ].map((e)=>value(e, resolveThemePath, utils)), mergeExtensionCustomizer);\n    });\n}\n/**\n *\n * @param {string} key\n * @return {Iterable<string[] & {alpha: string | undefined}>}\n */ function* toPaths(key) {\n    let path = (0, _toPath.toPath)(key);\n    if (path.length === 0) {\n        return;\n    }\n    yield path;\n    if (Array.isArray(key)) {\n        return;\n    }\n    let pattern = /^(.*?)\\s*\\/\\s*([^/]+)$/;\n    let matches = key.match(pattern);\n    if (matches !== null) {\n        let [, prefix, alpha] = matches;\n        let newPath = (0, _toPath.toPath)(prefix);\n        newPath.alpha = alpha;\n        yield newPath;\n    }\n}\nfunction resolveFunctionKeys(object) {\n    // theme('colors.red.500 / 0.5') -> ['colors', 'red', '500 / 0', '5]\n    const resolvePath = (key, defaultValue)=>{\n        for (const path of toPaths(key)){\n            let index = 0;\n            let val = object;\n            while(val !== undefined && val !== null && index < path.length){\n                val = val[path[index++]];\n                let shouldResolveAsFn = isFunction(val) && (path.alpha === undefined || index <= path.length - 1);\n                val = shouldResolveAsFn ? val(resolvePath, configUtils) : val;\n            }\n            if (val !== undefined) {\n                if (path.alpha !== undefined) {\n                    let normalized = (0, _pluginUtils.parseColorFormat)(val);\n                    return (0, _withAlphaVariable.withAlphaValue)(normalized, path.alpha, (0, _toColorValue.default)(normalized));\n                }\n                if ((0, _isPlainObject.default)(val)) {\n                    return (0, _cloneDeep.cloneDeep)(val);\n                }\n                return val;\n            }\n        }\n        return defaultValue;\n    };\n    Object.assign(resolvePath, {\n        theme: resolvePath,\n        ...configUtils\n    });\n    return Object.keys(object).reduce((resolved, key)=>{\n        resolved[key] = isFunction(object[key]) ? object[key](resolvePath, configUtils) : object[key];\n        return resolved;\n    }, {});\n}\nfunction extractPluginConfigs(configs) {\n    let allConfigs = [];\n    configs.forEach((config)=>{\n        allConfigs = [\n            ...allConfigs,\n            config\n        ];\n        var ref;\n        const plugins = (ref = config === null || config === void 0 ? void 0 : config.plugins) !== null && ref !== void 0 ? ref : [];\n        if (plugins.length === 0) {\n            return;\n        }\n        plugins.forEach((plugin)=>{\n            if (plugin.__isOptionsFunction) {\n                plugin = plugin();\n            }\n            var ref;\n            allConfigs = [\n                ...allConfigs,\n                ...extractPluginConfigs([\n                    (ref = plugin === null || plugin === void 0 ? void 0 : plugin.config) !== null && ref !== void 0 ? ref : {}\n                ])\n            ];\n        });\n    });\n    return allConfigs;\n}\nfunction resolveCorePlugins(corePluginConfigs) {\n    const result = [\n        ...corePluginConfigs\n    ].reduceRight((resolved, corePluginConfig)=>{\n        if (isFunction(corePluginConfig)) {\n            return corePluginConfig({\n                corePlugins: resolved\n            });\n        }\n        return (0, _configurePlugins.default)(corePluginConfig, resolved);\n    }, _corePluginList.default);\n    return result;\n}\nfunction resolvePluginLists(pluginLists) {\n    const result = [\n        ...pluginLists\n    ].reduceRight((resolved, pluginList)=>{\n        return [\n            ...resolved,\n            ...pluginList\n        ];\n    }, []);\n    return result;\n}\nfunction resolveConfig(configs) {\n    let allConfigs = [\n        ...extractPluginConfigs(configs),\n        {\n            prefix: \"\",\n            important: false,\n            separator: \":\",\n            variantOrder: _defaultConfigStub.default.variantOrder\n        }, \n    ];\n    var ref, ref1;\n    return (0, _normalizeConfig.normalizeConfig)((0, _defaults.defaults)({\n        theme: resolveFunctionKeys(mergeExtensions(mergeThemes(allConfigs.map((t)=>{\n            return (ref = t === null || t === void 0 ? void 0 : t.theme) !== null && ref !== void 0 ? ref : {};\n        })))),\n        corePlugins: resolveCorePlugins(allConfigs.map((c)=>c.corePlugins)),\n        plugins: resolvePluginLists(configs.map((c)=>{\n            return (ref1 = c === null || c === void 0 ? void 0 : c.plugins) !== null && ref1 !== void 0 ? ref1 : [];\n        }))\n    }, ...allConfigs));\n}\n"]},"metadata":{},"sourceType":"script"}